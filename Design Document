OVERVIEW
We are aiming to design an amino acid composition tool for viral proteomes, which will calculate amino acid compositions (AAC) of various viral proteome input sequences and run comparisons between them. Ultimately, we hope to produce a machine learning model that can predict possible mutations in viral variants based on patterns in amino acid composition. The amino acid composition of proteomes can be used to predict structural properties of the produced proteins, such as folding under particular environmental conditions (i.e., the host the virus infects), as well as the rate at which the virus mutates and evolves into new potentially dangerous strains that continue to infect humans and evade vaccines. Prediction of future mutations in viral variants is helpful in development of therapeutics/drugs to treat viral infections, as well as in the implementation of preventative measures prior to infection.

We will be using proteomes obtained from all SARS-CoV-2 Omicron variants as test data, which will be obtained from NCBI, GISAID, and NextStrain. Currently, we are considering comparison of test data between different databases to determine if using input data from one of three listed databases is ideal based on maximal data availability. 

Previously, the development of machine learning algorithms for the creation of models to predict protein structure fom amino acid compositions has been done, though this is not comprehensive for our purposes—we hope to add to previous algorithms in the creation of our own pipeline to extract data about amino acid composition of our viral protein sequences, and fit these sequences to known statistical models, such as Benford’s law, to determine patterns in AAC in viruses for mutation predction.

CONTEXT
Given proteomes of viral genomes, we will be extracting the amino acid compostion to aid in prediction of potential mutations using a pipeline to conduct statistical analyses for fitting of genomic sequences to standard models to identify patterns in amino acid composition across viral genomes. 

GOALS & NON-GOALS
Goal: Develop pipeline to evaluate amino acid composition of viral proteomes to aid in the prediction of potential mutations
Non-Goals: Various modules will be used to perform methods such as determining amino acid composition of proteomes to start (the code for this will likely not be written from scratch), and statistical analyses will also be performed with existing modules. 

PROPOSED SOLUTION
To implement our pipeline, we will be using the programming languages Python and R.  Biopython will be heavily used to more easily work with proteomic data and parse sequences, and various math and statistics modules will be used to run analyses on the code. Our input data consists of FASTA files of viral proteomes obtained from the databases listed above (NCBI, GISAID, NextStrain), and our output data will be presented in the form of statistical test outputs and figures aiding in visualization of amino acid composition corresponding to potential mutations. After obtaining FASTA files from said databases, processing will take place by flagging FASTA sequences that contain any non-standard amino acid residues for removal, removing sequences with these removal flags, and funneling the FASTA files into a pipeline for statistical analysis. 

MILESTONES
Week 1 (3/24): Retrieving Fasta files and download amino acid sequences of the virus from GenBank or GISAID. and downloading necessary tools.
Week 2 (3/31): Data pre-processing (removing lines that do not contain AA residues, stripping newlines and whitespaces, cleaning data as needed)
Week 3 (4/7): Determine AA frequencies for each sample
Week 4 (4/14): Correlation analysis between AACs and proteome variants
Week 5 (4/21): Test for normality Shapiro-Wilk test, skewness, kurtosis
Week 6 (4/28): Validate correlation analysis using WebPRANK (aligns proteome sequences); Work on final presentation slides
Week 7 (5/5): Finalize project code and final app note
